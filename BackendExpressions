//starting a new process using taskListener
${runtimeService.createProcessInstanceBuilder().processDefinitionKey("myCaseKey").variable("myvariable", "something").start()}
${runtimeService.createProcessInstanceBuilder().processDefinitionKey("jOB_E_Process_StartingProcessUsingTaskListeners").variable("pyIds", pyIds).variable("taskId", task.getId()).start()}

//setting a variablr in a flow (Arrow) with turnary operation
${execution.setVariable('role', execution.getVariable('condition') == 'someValue' ? 'val1' : 'val2')}
${execution.setVariable('isEntry','true')}

//get a response from service registry using an action button
1.put the action button
2.use the store response button option in an action button 
3.use below expression to get the response from the service registry. {{$response.executionPayload.isVisibleF4}}

//assigning a responder and JEC as assignee in a JOB E joint submission
${responder.pyId}
${jeConsultant.pyId}

//cmmn setting a variable  in  a 3.14
${cmmnRuntimeService.setVariable(root.id, "isDm","Requestor")}

//do sum of subform elements and compare 
//{{flw.sum(flw.mapAttr(addtionalDuties,'percentage')) == flw.sum(flw.mapAttr(eliminatedDuties,'percentage'))}}
{{  flw.sum(flw.mapAttr(SoSCF.addtionalDuties,'percentage'))<='100' &&   flw.sum(flw.mapAttr(SoSCF.addtionalDuties,'percentage')) == flw.sum(flw.mapAttr(SoSCF.eliminatedDuties,'percentage')) && flw.exists(SoSCF.prCmtForJobChange) && flw.exists(SoSCF.prCmtForAdditionalDetails) && flw.exists(SoSCF.prCmtForRevision) }}

//check if there is an element available in the list
 "array": [
    "3c",
    "3d"
  ]           -----    {{ flw.in(array, '3c') }}
